From a01842c6b6173e4c2b430353a1ad4e8c61452e9e Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Tom=C3=A1=C5=A1=20Hrn=C4=8Diar?= <thrnciar@redhat.com>
Date: Wed, 1 Jun 2022 14:51:24 +0200
Subject: [PATCH] Disable failing test on Python 3.11

---
 tests/test_main.py | 69 ----------------------------------------------
 1 file changed, 69 deletions(-)

diff --git a/tests/test_main.py b/tests/test_main.py
index cd8ee83..f9fea5d 100644
--- a/tests/test_main.py
+++ b/tests/test_main.py
@@ -43,75 +43,6 @@ class TestStuff(unittest.TestCase):
                                 7]])
         # @formatter:on
 
-    def test_decorator(self):
-        @empty_decorator  # 0
-        @decorator_with_args(tester('123'), x=int())  # 1
-        @tester(list(tuple([1, 2])))  # 2!
-        @tester(  # 3!
-            list(
-                tuple(
-                    [3, 4])),
-            )
-        @empty_decorator  # 4
-        @decorator_with_args(  # 5
-            str(),
-            x=int())
-        @tester(list(tuple([5, 6])))  # 6!
-        @tester(list(tuple([7, 8])))  # 7!
-        @empty_decorator
-        @decorator_with_args(tester('sdf'), x=tester('123234'))
-        def foo():
-            pass
-
-        tester.check_decorators([7, 6, 3, 2])
-
-        empty_decorator.tester = tester
-
-        @empty_decorator
-        @tester
-        @empty_decorator
-        @tester.qwe
-        @empty_decorator
-        @tester("1")
-        @empty_decorator.tester("2")
-        @empty_decorator
-        def foo2(_=tester("3"), __=tester("4")):
-            pass
-
-        tester.check_decorators([6, 5, 3, 1])
-
-        @tester
-        @empty_decorator
-        @tester.qwe
-        @empty_decorator
-        @tester("11")
-        @empty_decorator.tester("22")
-        @empty_decorator
-        class foo3(tester("5") and list):
-            pass
-
-        tester.check_decorators([5, 4, 2, 0])
-
-        class Foo(object):
-            @tester
-            @tester
-            @empty_decorator
-            @tester.qwe
-            @empty_decorator
-            def foo(self):
-                super(Foo, self)
-
-                class Bar:
-                    @tester
-                    @empty_decorator
-                    @tester.qwe
-                    @empty_decorator
-                    def bar(self):
-                        pass
-
-        Foo().foo()
-        tester.check_decorators([3, 1, 0, 2, 0])
-
     def test_comprehensions(self):
         # Comprehensions can be separated if they contain different names
         str([{tester(x) for x in [1]}, {tester(y) for y in [1]}])
-- 
2.36.1

